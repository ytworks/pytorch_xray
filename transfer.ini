[data]
# 教師データのcsvファイルパスを指定
label_path=./data/Data_Entry_2017_v2.csv

# 訓練データセットのパスを指定
train_path=./data/train_val_list.txt

# テストデータセットのパスを指定
test_path=./data/test_list.txt

# 画像データのパスを指定
#img_dir=/Users/takagiyuzo/data/X_ray/images
#img_dir=/Users/yuzo.takagi/chest-x/x-ray/images
#img_dir=/app/data/X_ray/images
img_dir=/home/yuzo-takagi/git/Xray_Chest/Data/Open/images

[model]
# モデルの保存パス
ckpt_path=./model/custom_focal_large_5.pth

# 再トレーニングのモデルパス
restore_path=./model/custom_focal_large_5.pth

# CSVファイルの出力パス
csv_path=./result/custom_focal_large_5.csv

[env]
# 使用するGPUの数の設定
num_gpu=3

# 経過ログの表示
verbose=yes

# 再トレーニングを行うか？
restore=no

# オリジナルのネットワークで転移学習を行うか？
transfer_mode=no

# 計算パラメータ
[params]
# トレーニングに使用するデータの割合
train_ratio=0.7

# バリデーションに使用するデータの割合
validation_ratio=0.1

# テストに使用するデータの割合
test_ratio=0.2

# バッチサイズ
batch_size=64

# 計算するエポック数
epoch=64

# early stopまでに計測するエポック数
patience=100

# データオーグメンテーション
[augmentation]
# リサイズの設定
resize_size=1024

# クロップサイズの設定
crop_size=896

# ランダムフリップ(水平方向)
flip_h=0.5
# ランダムフリップ(垂直方向)
flip_v=0.0
# ランダム90度回転
rotate90=no
# ランダム回転の角度
rotation=7

# データバランシング
[sampling]
balance=no

[loss]
# 損失関数の種類の指定 (bce / focal)
loss_type=focal

# focal lossのalphaの指定
focal_alpha=0.25

# focal lossのgammaの指定
focal_gamma=2.0

[optimizer]
# 勾配アルゴリズムの指定 (指定可能な手法: sgd / adam / amsgrad)
type=sgd

# 学習係数の指定
lr=1.0e-2

# モメンタムの指定
momentum=0.9

# 正則化係数の指定
weight_decay=1.0e-4

# 動的学習率のアルゴリズムの指定 (指定可能な手法: stepLR / ReduceOnPlateau / CosineAnnealing)
scheduler_type=CosineAnnealing

# stepLRを使用した場合の減衰エポック数
lr_decay_steps=20

# stepLR / ReduceOnPlateauを使用した場合の減衰時の減衰率
lr_decay_rate=0.1

# ReduceOnPlateauのpatience
patience=2

# 学習率の下限
min_lr=1.0e-6

# CosineAnnealingの周期
te=1

# CosineAnnealingの周期の増大率
tmult=2

# Gradient clippingの設定
[gradient_clip]
# Gradient clippingを行うか？
is_clip=no

# clip_by_normを行うか？
is_norm=yes

# クリップする値の設定
value=0.01

[network]
# ネットワーク構造の指定
# (指定可能な手法: vgg / resnet34 / resnet50 / resnet101 / resnet152 / densenet121)
# カスタムネットの場合は customを指定
pretrained_model=custom

# imagenetの事前学習の使用
pretrained=yes

# Fine tuningをするか？
fine_tuning=no


# 出力層のアーキテクチャの指定 (global_pool / wildcat)
pool_type=wildcat

# global poolの場合のpooling方式の指定 (max / avg)
global_pool_type=max

# 出力層のクラス数の指定
num_classes=15

# wildcatの場合の上位ピクセルの抽出数を指定 (区間: 0 ~ 1.0)
wc_kmax=0.2

# wildcatの場合の下位ピクセルの抽出数を指定 (区間: 0 ~ 1.0)
wc_kmin=0.2

# wildcatの場合の上位ピクセルと下位ピクセルの割合を指定 (区間: 0 ~ 1.0)
wc_alpha=1.0

# wildcatの各クラスのマップ数の指定
num_maps=128

# class-wise pooling層の dropout
dropout=0.0
